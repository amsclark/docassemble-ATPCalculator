id: atp_basic_info
question: |
  Ability to Pay Calculator - Basic Information
subquestion: |
  Please complete the boxes below related to the person's case and money situation.
progress: 20
fields:
  - First Name: first_name
  - Middle Name: middle_name
    required: false
  - Last Name: last_name
  - Suffix: suffix
    required: false
  - State: state
    input type: dropdown
    code: states_dict
    datatype: str
    required: true
  - County: county
    choices: 
     -  N/A
    #js enable if: val('state')
    required: true
  - Is Defendant 65 years of age or older?: sixty_five_or_older
    datatype: yesnoradio
  - Household Size: household_size
    datatype: integer
    min: 1
  - Number of Cars: number_of_cars
    input type: dropdown
    code: number_cars_options
  - Fine/Penalty Balance: fine_penalty_balance
    datatype: currency
    min: ${ min_penalty }
  - Earned Income: has_ei
    datatype: yesnoradio
  - Other Income: has_oi
    datatype: yesnoradio
  - note: |
      <script>
        // Call the function when the page loads or an action is performed
        $(document).on('daPageLoad', function() {
          questionPage = document.getElementsByTagName("H1")[0].innerHTML;
          if (questionPage == "Ability to Pay Calculator - Basic Information") {
            // Fetch and display the county
            get_interview_variables().then(function(response) {
              // Extract the state and county from the response
              const state = response.variables.state;
              const county = response.variables.county;
      
              // Update the state dropdown and trigger the 'change' event
              const stateElement = document.getElementById(btoa("state").replace("=", ""));
              stateElement.value = state;
              stateElement.dispatchEvent(new Event('change'));
      
              // Use a mutation observer to validate the county dropdown is populated
              const countyElement = document.getElementById(btoa("county").replace("=", ""));
              const observer = new MutationObserver(function(mutations) {
                mutations.forEach(function(mutation) {
                  // Check if "N/A" is still in the options
                  const naOption = countyElement.querySelector('option[value="N/A"]');
                  if (!naOption) { // If "N/A" is not found, the dropdown is populated
                    observer.disconnect(); // Stop observing once "N/A" is removed
                    countyElement.value = county; // Set the county value
                  }
                });
              });
              // Observe changes to the county dropdown (watch for added or removed child elements like <option>)
              observer.observe(countyElement, { childList: true, subtree: true });
            }).catch(function(error) {
              console.error('Error fetching interview variables:', error);
            });
          }
        });
      </script>
check in: update_counties
continue button field: basic_info
---
event: update_counties
code: |
  if action_argument('_changed') == 'state':
    background_response(
      {
        'county':
          {
            'choices': \
              get_state_county_names(action_argument('state')) \
              or \
              ['N/A']
          }
      }, 'fields')
  background_response()